// Generated by [transform](https://transform.tools/json-to-rust-serde)

use serde::{Deserialize, Serialize};


#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
pub struct Success<T> {
    pub code: i64,
    #[serde(rename = "event_list")]
    pub event_list: Vec<T>,
    pub total: String,
    #[serde(rename = "counts_of_applied_events_this_month")]
    pub counts_of_applied_events_this_month: i64,
    #[serde(rename = "fair_play_status")]
    pub fair_play_status: i64,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
pub struct FullEvent {
    pub id: i64,
    #[serde(rename = "organizer_id")]
    pub organizer_id: i64,
    pub flgs: i64,
    #[serde(rename = "status_id")]
    pub status_id: i64,
    #[serde(rename = "start_datetime")]
    pub start_datetime: String,
    pub timezone: String,
    #[serde(rename = "apply_start_datetime")]
    pub apply_start_datetime: String,
    #[serde(rename = "max_join_count")]
    pub max_join_count: i64,
    #[serde(rename = "country_code")]
    pub country_code: String,
    #[serde(rename = "pref_code")]
    pub pref_code: String,
    pub postcode: String,
    #[serde(rename = "city_code")]
    pub city_code: String,
    #[serde(rename = "street_address")]
    pub street_address: String,
    #[serde(rename = "checkin_range")]
    pub checkin_range: i64,
    #[serde(rename = "participation_condition_by_admin")]
    pub participation_condition_by_admin: Option<String>,
    #[serde(rename = "event_place_geo")]
    pub event_place_geo: EventPlaceGeo,
    #[serde(rename = "entry_type")]
    pub entry_type: i64,
    #[serde(rename = "event_created_at")]
    pub event_created_at: String,
    #[serde(rename = "event_updated_at")]
    pub event_updated_at: String,
    #[serde(rename = "event_series_id")]
    pub event_series_id: String,
    #[serde(rename = "series_type")]
    pub series_type: i64,
    #[serde(rename = "game_title_id")]
    pub game_title_id: String,
    #[serde(rename = "game_title")]
    pub game_title: String,
    #[serde(rename = "team_count")]
    pub team_count: String,
    #[serde(rename = "online_flag")]
    pub online_flag: String,
    #[serde(rename = "term_event_series_id")]
    pub term_event_series_id: String,
    #[serde(rename = "organizer_type")]
    pub organizer_type: i64,
    #[serde(rename = "organizer_name")]
    pub organizer_name: String,
    #[serde(rename = "phone_number")]
    pub phone_number: String,
    #[serde(rename = "place_geo")]
    pub place_geo: super::PlaceGeo,
    #[serde(rename = "organizer_sns_url")]
    pub organizer_sns_url: String,
    pub notes: String,
    #[serde(rename = "event_series_title")]
    pub event_title: String,
    pub entry_fee: String,
    #[serde(rename = "entry_fee_currency_code")]
    pub entry_fee_currency_code: String,
    #[serde(rename = "organizer_url")]
    pub organizer_url: String,
    pub event_series_flgs: String,
    pub favorite_organizer: Option<String>,
    #[serde(rename = "appliable_by_user")]
    pub appliable_by_user: i64,
    #[serde(rename = "game_title_language")]
    pub game_title_language: String,
    pub display_game_format_ids: String,
    pub application_open: String,
    #[serde(rename = "is_top_tournaments_right")]
    pub is_top_tournaments_right: bool,
    #[serde(rename = "is_arriving_first")]
    pub is_arriving_first: bool,
    #[serde(rename = "is_canceled")]
    pub is_canceled: bool,
    #[serde(rename = "is_capacity_hidden")]
    pub is_capacity_hidden: bool,
    #[serde(rename = "is_after_lottery")]
    pub is_after_lottery: bool,
    #[serde(rename = "is_area_championship")]
    pub is_area_championship: bool,
    #[serde(rename = "is_select_pref_for_points")]
    pub is_select_pref_for_points: bool,
    #[serde(rename = "no_use_tcg_plus")]
    pub no_use_tcg_plus: bool,
    #[serde(rename = "game_format_ids")]
    pub game_format_ids: Vec<i64>,
    #[serde(rename = "is_over_max_join_count")]
    pub is_over_max_join_count: bool,
    #[serde(rename = "is_penalty")]
    pub is_penalty: bool,
    #[serde(rename = "accepting_on_the_day_start_time")]
    pub accepting_on_the_day_start_time: Option<String>,
    #[serde(rename = "accepting_on_the_day_end_time")]
    pub accepting_on_the_day_end_time: Option<String>,
    pub excerpt: Option<String>,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
pub struct PartialEvent {
    pub id: i64,
    #[serde(rename = "organizer_id")]
    pub organizer_id: i64,
    #[serde(rename = "start_datetime")]
    pub start_datetime: String,
    #[serde(rename = "apply_start_datetime")]
    pub apply_start_datetime: String,
    #[serde(rename = "max_join_count")]
    pub max_join_count: i64,
    #[serde(rename = "country_code")]
    pub country_code: String,
    #[serde(rename = "pref_code")]
    pub pref_code: String,
    pub postcode: String,
    #[serde(rename = "city_code")]
    pub city_code: String,
    #[serde(rename = "street_address")]
    pub street_address: String,
    #[serde(rename = "checkin_range")]
    pub checkin_range: i64,
    #[serde(rename = "participation_condition_by_admin")]
    pub participation_condition_by_admin: Option<String>,
    #[serde(rename = "event_updated_at")]
    pub event_updated_at: String,
    #[serde(rename = "event_series_id")]
    pub event_series_id: String,
    #[serde(rename = "game_title")]
    pub game_title: String,
    #[serde(rename = "team_count")]
    pub team_count: String,
    #[serde(rename = "online_flag")]
    pub online_flag: String,
    #[serde(rename = "organizer_name")]
    pub organizer_name: String,
    #[serde(rename = "phone_number")]
    pub phone_number: String,
    #[serde(rename = "organizer_sns_url")]
    pub organizer_sns_url: String,
    #[serde(rename = "event_series_title")]
    pub event_title: String,

    #[serde(rename = "organizer_url")]
    pub organizer_url: String,
    pub favorite_organizer: Option<String>,
    #[serde(rename = "appliable_by_user")]
    pub appliable_by_user: i64,
    #[serde(rename = "game_title_language")]
    pub game_title_language: String,
    #[serde(rename = "is_top_tournaments_right")]
    pub is_top_tournaments_right: bool,
    #[serde(rename = "is_arriving_first")]
    pub is_arriving_first: bool,
    #[serde(rename = "is_canceled")]
    pub is_canceled: bool,
    #[serde(rename = "is_capacity_hidden")]
    pub is_capacity_hidden: bool,
    #[serde(rename = "is_after_lottery")]
    pub is_after_lottery: bool,
    #[serde(rename = "is_area_championship")]
    pub is_area_championship: bool,
    #[serde(rename = "is_select_pref_for_points")]
    pub is_select_pref_for_points: bool,
    #[serde(rename = "no_use_tcg_plus")]
    pub no_use_tcg_plus: bool,
    #[serde(rename = "is_over_max_join_count")]
    pub is_over_max_join_count: bool,
    #[serde(rename = "is_penalty")]
    pub is_penalty: bool,
    #[serde(rename = "accepting_on_the_day_start_time")]
    pub accepting_on_the_day_start_time: Option<String>,
    #[serde(rename = "accepting_on_the_day_end_time")]
    pub accepting_on_the_day_end_time: Option<String>,
    pub excerpt: Option<String>,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
pub struct EventPlaceGeo {
    pub x: f64,
    pub y: f64,
}
